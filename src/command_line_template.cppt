#include "command_line_template.h"

@it "reify_command_line() works" {
  upd::command_line_template tpl = {
      "program",
      {
          upd::command_line_template_part(
              {"foo", "bar"},
              {upd::command_line_template_variable::input_files,
               upd::command_line_template_variable::dependency}),
          upd::command_line_template_part(
              {"beep"}, {upd::command_line_template_variable::dependency,
                         upd::command_line_template_variable::output_files}),
      },
      {},
  };
  upd::command_line_parameters parts = {
      "",
      {"input1", "input2"},
      {"output"},
      {{"oh", "la"}, {"some_dep"}},
  };
  auto result = upd::reify_command_line(tpl, parts, "/", "/");
  @expect(result.binary_path).to_equal(tpl.binary_path);
  @expect(result.args)
      .to_be({"foo", "bar", "input1", "input2", "oh", "la", "beep", "some_dep",
              "output"});
}
